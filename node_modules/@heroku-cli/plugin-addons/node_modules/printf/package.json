{
  "_args": [
    [
      {
        "raw": "printf@0.3.0",
        "scope": null,
        "escapedName": "printf",
        "name": "printf",
        "rawSpec": "0.3.0",
        "spec": "0.3.0",
        "type": "version"
      },
      "C:\\Local Disk (E)\\Block Chain\\express\\assignment\\node_modules\\@heroku-cli\\plugin-addons"
    ]
  ],
  "_from": "printf@0.3.0",
  "_hasShrinkwrap": false,
  "_id": "printf@0.3.0",
  "_location": "/@heroku-cli/plugin-addons/printf",
  "_nodeVersion": "9.9.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/printf_0.3.0_1523973284354_0.38593081483099256"
  },
  "_npmUser": {
    "name": "david",
    "email": "david@adaltas.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "printf@0.3.0",
    "scope": null,
    "escapedName": "printf",
    "name": "printf",
    "rawSpec": "0.3.0",
    "spec": "0.3.0",
    "type": "version"
  },
  "_requiredBy": [
    "/@heroku-cli/plugin-addons"
  ],
  "_resolved": "https://registry.npmjs.org/printf/-/printf-0.3.0.tgz",
  "_shasum": "6918ca5237c047e19cf004b69e6bcfafbef1ce82",
  "_shrinkwrap": null,
  "_spec": "printf@0.3.0",
  "_where": "C:\\Local Disk (E)\\Block Chain\\express\\assignment\\node_modules\\@heroku-cli\\plugin-addons",
  "author": {
    "name": "David Worms",
    "email": "david@adaltas.com"
  },
  "bugs": {
    "url": "https://github.com/adaltas/node-printf/issues"
  },
  "contributors": [
    {
      "name": "David Worms",
      "email": "david@adaltas.com"
    },
    {
      "name": "Aluísio Augusto Silva Gonçalves",
      "email": "aluisio@aasg.name"
    },
    {
      "name": "Xavier Mendez",
      "email": "jmendeth@gmail.com"
    },
    {
      "name": "LLeo",
      "email": "lleoem@gmail.com"
    },
    {
      "name": "Derrell Lipman",
      "email": "https://github.com/derrell"
    }
  ],
  "dependencies": {},
  "description": "Full implementation of the `printf` family in pure JS.",
  "devDependencies": {
    "coffeescript": "^2.2.4",
    "mocha": "5.1.0",
    "semver": "5.5.0",
    "should": "13.2.1"
  },
  "directories": {
    "lib": "./lib",
    "test": "./test",
    "doc": "./doc"
  },
  "dist": {
    "integrity": "sha512-DlJSroT2n9nkh47D4T6BHFQvsMR0L41889ECLmdbzk2BlhN0t31/vl5mHvlWiNBCNQrqG9XfpXwqmJQ2utoYwg==",
    "shasum": "6918ca5237c047e19cf004b69e6bcfafbef1ce82",
    "tarball": "https://registry.npmjs.org/printf/-/printf-0.3.0.tgz",
    "fileCount": 8,
    "unpackedSize": 30249,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa1fylCRA9TVsSAnZWagAA38oQAJFLseDyd2O7U70UgBo1\nif1uOTqxdvKa1nOcxK0RTu5xlBadcJt+I+sZYbxtyFijXG5jGW7YHzHTS8Sw\nFWqLFCfiFqe1a93D50JJvMQXOIEogM+j4yq8vsoAhdL5vFltK0WKB0R2JfGM\n3TNpkRBPoQvYqezKNgoqNiJQnEd34yRHIN9qsdQvFHENxwWlVwIurwEw+fbG\nwu/fFMGfCoOmzU70LDhH7Ohn/EIWAy9p1XBXrU8L9ASVgWQf8RrQq8MKHWvI\naKlrybFxbgmtnRqjeowBnkGtMWO1RJQy/9W82VKhvfZBBk77YC0+tuCLrw/x\n1DW+bwJy6tvF5ahZ6ZgjAvQeyY/AInH+qoUKTH/inQfqifftOrt7OySewYTC\nSXLSjzEge18vH+lAfriMPVO+RfkhHo7HucsBFN+YfywLQP+sO0w8bm0HHq/3\nD4sRBbEyEgB2Bof2gEBLqht1ZByMDKOX8H2H5R9GgB8IJ+Y3gsR94THT+fmA\nomsEkM/lwhLvC6kbqifbksFf5Mldd/Ly89NdU7dxw0i0pG3YIP9JXDWYQdG8\n/s7TF89VTHRHXd0Z8G4rUC+3a6sgCuKR1mB0Mk4MzukywSG241RQA/Os51yZ\nROEW/OFs3gq9eYEvkR7zC/tyiQ7BYgXWNKGp1YNsJuJgKpELVs8E0qSkn56c\n7Rqd\r\n=jKpS\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">= 0.9.0"
  },
  "gitHead": "ba413a03e5f7210f4b23602423af7bbed8caba24",
  "homepage": "http://www.adaltas.com/projects/node-printf",
  "keywords": [
    "printf",
    "formatting",
    "sprintf",
    "format",
    "output",
    "print"
  ],
  "license": "BSD-3-Clause",
  "main": "./lib/printf",
  "maintainers": [
    {
      "name": "David Worms",
      "email": "david@adaltas.com"
    }
  ],
  "name": "printf",
  "optionalDependencies": {},
  "readme": "[![Build Status](https://secure.travis-ci.org/adaltas/node-printf.png)](http://travis-ci.org/adaltas/node-printf)\n\nA complete implementation of the **`printf` C functions family**\nfor [Node.JS][node], written in pure JavaScript.\n\n**Bonus!** You get extra features, like the `%O` converter (which `inspect`s\nthe argument). See [Extra Features](#extra-features) below.\n\n[![NPM](https://nodei.co/npm/printf.png?stars&downloads)](https://nodei.co/npm/printf/) [![NPM](https://nodei.co/npm-dl/printf.png)](https://nodei.co/npm/printf/)\n\nInstalling\n----------\n\nVia [NPM][npm]:\n\n``` bash\n$ npm install printf\n```\n\nUsage\n-----\n\nUse it like you would in C (`printf`/`sprintf`):\n\n``` javascript\nvar printf = require('printf');\nvar result = printf(format, args...);\n```\n\nIt can also output the result for you, as `fprintf`:\n\n``` javascript\nvar printf = require('printf');\nprintf(write_stream, format, args...);\n```\n\n## Features\n\n### Flag ` ` (space)\n\n``` javascript\nassert.eql('  -42', printf('% 5d', -42));\n```\n\n### Flag `+` (plus)\n\n``` javascript\nassert.eql('  +42', printf('%+5d', 42));\n```\n\n### Flag `0` (zero)\n\n``` javascript\nassert.eql('00042', printf('%05d', 42));\n```\n\n### Flag `-` (minus)\n\n``` javascript\nassert.eql('42   ', printf('%-5d', 42));\n```\n\n### Width / precision\n\n``` javascript\nassert.eql('42.90', printf('%.2f', 42.8952));\nassert.eql('042.90', printf('%06.2f', 42.8952));\n```\n\n### Numerical bases\n\n``` javascript\nassert.eql('\\x7f', printf('%c', 0x7f));\nassert.eql('a', printf('%c', 'a'));\nassert.eql('\"', printf('%c', 34));\n```\n\n### Miscellaneous\n\n``` javascript\nassert.eql('10%', printf('%d%%', 10));\nassert.eql('+hello+', printf('+%s+', 'hello'));\nassert.eql(\"a\", printf(\"%c\", \"a\"));\nassert.eql('\"', printf(\"%c\", 34));\nassert.eql('$', printf('%c', 36));\nassert.eql(\"10\", printf(\"%d\", 10));\n```\n\nExtra features!\n---------------\n\n### Inspector\n\nThe `%O` converter will call [`util.inspect(...)`][util_inspect] at the argument:\n\n``` javascript\nassert.eql(\"Debug: { hello: 'Node', repeat: false }\",\n  printf('Debug: %O', {hello: 'Node', \"repeat\": false})\n);\nassert.eql(\"Test: { hello: 'Node' }\",\n  printf('%2$s: %1$O', {\"hello\": 'Node'}, 'Test')\n);\n```\n\n**Important:** it's a capital \"O\", *not* a zero!\n\nSpecifying a precision lets you control the depth up to which the object is formatted:\n\n``` javascript\nassert.eql(\"Debug: { depth0: { depth1_: 0, depth1: [Object] } }\",\n  printf('Debug: %.1O', {depth0: {depth1: {depth2: {depth3: true}}, depth1_: 0}})\n);\n```\n\nYou can use the alternative form flag together with `%O` to disable representation of non-enumerable properties (useful for arrays):\n\n``` javascript\nassert.eql(\"With non-enumerable properties: [ 1, 2, 3, 4, 5, [length]: 5 ]\",\n  printf('With non-enumerable properties: %O', [1, 2, 3, 4, 5])\n);\nassert.eql(\"Without non-enumerable properties: [ 1, 2, 3, 4, 5 ]\",\n  printf('Without non-enumerable properties: %#O', [1, 2, 3, 4, 5])\n);\n```\n\n### Argument mapping\n\nIn addition to the old-fashioned `n$`,\nyou can use **hashes** and **property names**!\n\n``` javascript\nassert.eql('Hot Pockets',\n  printf('%(temperature)s %(crevace)ss', {\n    temperature: 'Hot',\n    crevace: 'Pocket'\n  })\n);\nassert.eql('Hot Pockets',\n  printf('%2$s %1$ss', 'Pocket', 'Hot')\n);\n```\n\n### Positionals\n\nLenght and precision can now be variable:\n\n``` javascript\nassert.eql(' foo', printf('%*s', 'foo', 4));\nassert.eql('      3.14', printf('%*.*f', 3.14159265, 10, 2));\nassert.eql('000003.142', printf('%0*.*f', 3.14159265, 10, 3));\nassert.eql('3.1416    ', printf('%-*.*f', 3.14159265, 10, 4));\n```\n\nDevelopment\n-----------\n\nTests are written in [CoffeeScript][coffee] executed with [Mocha][mocha]. To use it, simple run `npm install`, it will install\nMocha and its dependencies in your project's `node_modules` directory followed by `npm test`.\n\nTo run the tests:\n\n```bash\nnpm install\nnpm test\n```\n\nThe test suite is run online with [Travis][travis] against the versions 0.9, 0.10 and 0.11 of \nNode.js.\n\nContributors\n------------\n\n*   David Worms <https://github.com/wdavidw>\n*   Aluísio Augusto Silva Gonçalves <https://github.com/AluisioASG>\n*   Xavier Mendez <https://github.com/jmendeth>\n*   LLeo <https://github.com/lleo>\n*   Derrell Lipman <https://github.com/derrell>\n\n\n[dojo]: http://www.dojotoolkit.org  \"The Dojo Toolkit\"\n[node]: http://nodejs.org \"The Node.JS platform\"\n[npm]:  https://github.com/isaacs/npm \"The Node Package Manager\"\n[util_inspect]: http://nodejs.org/api/util.html#util_util_inspect_object_showhidden_depth_colors \"util.inspect() documentation\"\n[expresso]: http://visionmedia.github.com/expresso \"The Expresso TDD\"\n[travis]: https://travis-ci.org \"Continuous Integration system\"\n[mocha]: http://mochajs.org/ \"The Mocha test framework\"\n[coffee]: http://coffeescript.org/\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/adaltas/node-printf.git"
  },
  "scripts": {
    "major": "npm version major -m 'Bump to version %s'",
    "minor": "npm version minor -m 'Bump to version %s'",
    "patch": "npm version patch -m 'Bump to version %s'",
    "postversion": "git push origin master && git push origin master --tags && npm publish",
    "preversion": "grep '## Trunk' CHANGELOG.md && npm test",
    "test": "mocha test/**/*.coffee",
    "version": "version=`grep '^  \"version\": ' package.json | sed 's/.*\"\\([0-9\\.]*\\)\".*/\\1/'` && sed -i \"s/## Trunk/## Version $version/\" CHANGELOG.md && git add CHANGELOG.md"
  },
  "types": "./typings/printf.d.ts",
  "version": "0.3.0"
}
