{
  "_args": [
    [
      {
        "raw": "@heroku-cli/plugin-pipelines-v5@^7.18.0",
        "scope": "@heroku-cli",
        "escapedName": "@heroku-cli%2fplugin-pipelines-v5",
        "name": "@heroku-cli/plugin-pipelines-v5",
        "rawSpec": "^7.18.0",
        "spec": ">=7.18.0 <8.0.0",
        "type": "range"
      },
      "C:\\Local Disk (E)\\Block Chain\\express\\assignment\\node_modules\\heroku"
    ]
  ],
  "_from": "@heroku-cli/plugin-pipelines-v5@^7.18.0",
  "_hasShrinkwrap": false,
  "_id": "@heroku-cli/plugin-pipelines-v5@7.18.0",
  "_location": "/@heroku-cli/plugin-pipelines-v5",
  "_nodeVersion": "10.12.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/plugin-pipelines-v5_7.18.0_1539753565913_0.8717016737336625"
  },
  "_npmUser": {
    "name": "dickeyxxx",
    "email": "dickeytk+npm@gmail.com"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@heroku-cli/plugin-pipelines-v5@^7.18.0",
    "scope": "@heroku-cli",
    "escapedName": "@heroku-cli%2fplugin-pipelines-v5",
    "name": "@heroku-cli/plugin-pipelines-v5",
    "rawSpec": "^7.18.0",
    "spec": ">=7.18.0 <8.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/heroku"
  ],
  "_resolved": "https://registry.npmjs.org/@heroku-cli/plugin-pipelines-v5/-/plugin-pipelines-v5-7.18.0.tgz",
  "_shasum": "069b509042746f7220a53e8d24deab49f2aa68a5",
  "_shrinkwrap": null,
  "_spec": "@heroku-cli/plugin-pipelines-v5@^7.18.0",
  "_where": "C:\\Local Disk (E)\\Block Chain\\express\\assignment\\node_modules\\heroku",
  "author": {
    "name": "Heroku Developer Experience team"
  },
  "bugs": {
    "url": "https://github.com/heroku/cli/issues"
  },
  "cli-engine": {
    "bin": "heroku",
    "topics": {
      "pipelines": {
        "description": "groups of apps that share the same codebase"
      },
      "reviewapps": {
        "description": "disposable apps built on GitHub pull requests"
      }
    },
    "repositoryPrefix": "<%- repo %>/blob/v<%- version %>/packages/pipelines-v5/<%- commandPath %>"
  },
  "dependencies": {
    "@heroku-cli/command": "^8.2.0",
    "bluebird": "^3.5.2",
    "co": "^4.6.0",
    "heroku-cli-util": "^8.0.10",
    "http-call": "^5.2.2",
    "inflection": "^1.12.0",
    "inquirer": "^6.2.0",
    "lodash.flatten": "^4.4.0",
    "lodash.sortby": "^4.7.0",
    "string-just": "^0.0.2",
    "validator": "^10.8.0"
  },
  "description": "pipelines heroku plugin",
  "devDependencies": {
    "@oclif/dev-cli": "^1.19.2",
    "@oclif/plugin-legacy": "^1.1.2",
    "chai": "^4.2.0",
    "mocha": "^5.1.1",
    "nock": "^9.2.6",
    "nyc": "^13.1.0",
    "sinon": "^4.5.0",
    "sinon-chai": "^3.0.0",
    "std-mocks": "^1.0.1",
    "supervisor": "^0.12.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-J/JYT/JHzC6wirZzAAhRAvQt6Pr5AdATNt9XIznfwmrHZ49NepKbPp4Czb1q3XUwpHEyIkmyYQ1YYOys4iBo/w==",
    "shasum": "069b509042746f7220a53e8d24deab49f2aa68a5",
    "tarball": "https://registry.npmjs.org/@heroku-cli/plugin-pipelines-v5/-/plugin-pipelines-v5-7.18.0.tgz",
    "fileCount": 40,
    "unpackedSize": 89328,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbxsZeCRA9TVsSAnZWagAAkbcP/3yBUFA2sSesbY42AxWm\nvCw5va+1dfDgOKFsBMqiTEKHxd6YQSXYV4V0kEaFyJylSh02N5vs+tVj3nxj\nvxyMkUmlqv2GjuHJ1TAiOxUXoMb/NcWxhp3RF8pN9S0xzuYgsTkbt0xlhoY/\ngnfYPlzl+Ndq0ERxhPHn4kJSnDv57H9DbicA6/hN/z8iVhCR3o6vBsWzb/Rd\nznH15TVdz6YEXz9U+2oLpecrpa0IZnNyC9esyXaYCM3OTcz+DNoKzivp2j73\nn1MASmU2MwxGlJUbOm3dVl6d3USzkjhR3Z39/xqMJcFd4zcs92l8QjtWQSv9\n1QTc7MtEMIdFFh7KdBmQHchxTXsP9uASkOgMYuUXvthQnATysiqJkh7JK9G2\nh3Iaf+sP/H5oHpHKcIsKZFYyUndUMtApMJX4sm8b17/IJ3oi1WWg8baBPHIY\ncld9zfXl7/Fy3g6wg9fCQe5ysx8jX7Ef6CJqrs5dDi9W0EPDBfcdEOWAef2R\nrbuSKWOBzLg3Hpa5tL47ceZGqvhlP58ZbmyT5TX1c+WnOssFqxsqx8BGDUx+\nSuKKnHgYpCkjYm/tPNFBAJIHFxbwge4Q0eBZwKwGSSFxoJTlosHYsyKQ59XS\nELVfx0T53kwONcWSytfEJrN2bNOJ/cylRny2j8/0oAJ+V4SD4oWxYHGJxY68\nSqoe\r\n=fvzw\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "files": [
    "oclif.manifest.json",
    "/index.js",
    "/commands",
    "/lib"
  ],
  "homepage": "https://github.com/heroku/cli/tree/master/packages/pipelines-v5",
  "keywords": [
    "heroku-plugin"
  ],
  "license": "ISC",
  "main": "index.js",
  "maintainers": [
    {
      "name": "alindeman",
      "email": "andy@lindeman.io"
    },
    {
      "name": "alouie-sfdc",
      "email": "alouie@heroku.com"
    },
    {
      "name": "amanmibra",
      "email": "amanmibra@gmail.com"
    },
    {
      "name": "amerine",
      "email": "mark@amerine.net"
    },
    {
      "name": "bigkevmcd",
      "email": "kevin@bigkevmcd.com"
    },
    {
      "name": "brettgoulder",
      "email": "bgoulder@salesforce.com"
    },
    {
      "name": "codefinger",
      "email": "joe@heroku.com"
    },
    {
      "name": "cyberdelia",
      "email": "timothee.peignier@tryphon.org"
    },
    {
      "name": "cyx",
      "email": "cyx@cyx.is"
    },
    {
      "name": "dhaulagiri",
      "email": "brian.runnells+github@gmail.com"
    },
    {
      "name": "dickeyxxx",
      "email": "dickeytk+npm@gmail.com"
    },
    {
      "name": "dmathieu",
      "email": "damien@heroku.com"
    },
    {
      "name": "elbandito",
      "email": "longoria.public@gmail.com"
    },
    {
      "name": "halorgium",
      "email": "tim@spork.in"
    },
    {
      "name": "hone",
      "email": "hone02@gmail.com"
    },
    {
      "name": "idangazit",
      "email": "idan@gazit.me"
    },
    {
      "name": "itops",
      "email": "npmjs@heroku.com"
    },
    {
      "name": "joshwlewis",
      "email": "josh.w.lewis@gmail.com"
    },
    {
      "name": "mimen",
      "email": "miladmaaan@gmail.com"
    },
    {
      "name": "ojacobson",
      "email": "owen@grimoire.ca"
    },
    {
      "name": "ransombriggs",
      "email": "rbriggs@heroku.com"
    },
    {
      "name": "rasphilco",
      "email": "philipe@heroku.com"
    },
    {
      "name": "raulb",
      "email": "ra.barroso@gmail.com"
    },
    {
      "name": "ryanbrainard",
      "email": "ryan@ryanbrainard.com"
    },
    {
      "name": "sibson",
      "email": "sibson@gmail.com"
    },
    {
      "name": "sigmavirus24",
      "email": "graffatcolmingov+npm@gmail.com"
    },
    {
      "name": "stephenbarlow",
      "email": "sbarlow@heroku.com"
    },
    {
      "name": "troelsthomsen",
      "email": "troethom@gmail.com"
    },
    {
      "name": "uhoh-itsmaciek",
      "email": "m.sakrejda@gmail.com"
    },
    {
      "name": "yann_ck",
      "email": "yannick.schutz@gmail.com"
    }
  ],
  "name": "@heroku-cli/plugin-pipelines-v5",
  "optionalDependencies": {},
  "readme": "# Pipelines Plugin for Heroku Toolbelt\n\n[![js-standard-style](https://cdn.rawgit.com/feross/standard/master/badge.svg)](https://github.com/feross/standard)\n\n[![npm\nversion](https://img.shields.io/npm/v/heroku-pipelines.svg)](https://www.npmjs.com/package/heroku-pipelines)\n[![build status](https://img.shields.io/circleci/project/heroku/heroku-pipelines.svg)](https://circleci.com/gh/heroku/heroku-pipelines)\n[![codecov](https://codecov.io/gh/heroku/heroku-pipelines/branch/master/graph/badge.svg)](https://codecov.io/gh/heroku/heroku-pipelines)\n\nA Heroku CLI plugin for [continuous delivery](https://www.heroku.com/continuous-delivery) on Heroku.\n\nThis plugin is used to set up a collection of apps sharing a common codebase where the latest slug of one app can be promoted to the app(s) in the following stage. The promotion only copies the upstream build artifact and leaves the downstream app's config vars, add-ons, and Git repo untouched.\n\n## How to install this plugin\n\nThis plugin is installed by default with the\n[Heroku CLI](https://cli.heroku.com/). You do not need to install it\nyourself. Just update your CLI:\n\n```\n$ heroku update\n```\n\n## Using Pipelines\n\nhttps://devcenter.heroku.com/articles/pipelines\n\n## Development\n\nFirst, please read [Developing CLI Plugins on Heroku's DevCenter](https://devcenter.heroku.com/articles/developing-toolbelt-plug-ins).\n\n#### Run Tests\n\n```\n$ npm test\n```\n\n#### Deploy\n\n1. Release a new version of this npm package.\n\n  ```\n  $ npm version patch/minor/major\n  ```\n\n2. Open a new pr in https://github.com/heroku/cli/blob/master/package.json, updating to the appropriate heroku-pipelines version.\n\n\n#### Commands\n\n<!-- commands -->\n* [`heroku pipelines`](#heroku-pipelines)\n* [`heroku pipelines:add PIPELINE`](#heroku-pipelinesadd-pipeline)\n* [`heroku pipelines:connect [NAME]`](#heroku-pipelinesconnect-name)\n* [`heroku pipelines:create [NAME]`](#heroku-pipelinescreate-name)\n* [`heroku pipelines:destroy PIPELINE`](#heroku-pipelinesdestroy-pipeline)\n* [`heroku pipelines:diff`](#heroku-pipelinesdiff)\n* [`heroku pipelines:info PIPELINE`](#heroku-pipelinesinfo-pipeline)\n* [`heroku pipelines:list`](#heroku-pipelineslist)\n* [`heroku pipelines:open PIPELINE`](#heroku-pipelinesopen-pipeline)\n* [`heroku pipelines:promote`](#heroku-pipelinespromote)\n* [`heroku pipelines:remove`](#heroku-pipelinesremove)\n* [`heroku pipelines:rename PIPELINE NAME`](#heroku-pipelinesrename-pipeline-name)\n* [`heroku pipelines:setup [NAME] [REPO]`](#heroku-pipelinessetup-name-repo)\n* [`heroku pipelines:transfer OWNER`](#heroku-pipelinestransfer-owner)\n* [`heroku reviewapps:disable`](#heroku-reviewappsdisable)\n* [`heroku reviewapps:enable`](#heroku-reviewappsenable)\n\n## `heroku pipelines`\n\nlist pipelines you have access to\n\n```\nUSAGE\n  $ heroku pipelines\n\nOPTIONS\n  --json  output in json format\n\nEXAMPLES\n  $ heroku pipelines\n  === My Pipelines\n  example\n  sushi\n```\n\n## `heroku pipelines:add PIPELINE`\n\nadd this app to a pipeline\n\n```\nUSAGE\n  $ heroku pipelines:add PIPELINE\n\nARGUMENTS\n  PIPELINE  name of pipeline\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n  -s, --stage=stage    stage of first app in pipeline\n\nDESCRIPTION\n  The app and pipeline names must be specified.\n  The stage of the app will be guessed based on its name if not specified.\n\nEXAMPLES\n  $ heroku pipelines:add example -a example-admin -s production\n  Adding example-admin to example pipeline as production... done\n```\n\n## `heroku pipelines:connect [NAME]`\n\nconnect a github repo to an existing pipeline\n\n```\nUSAGE\n  $ heroku pipelines:connect [NAME]\n\nARGUMENTS\n  NAME  name of pipeline\n\nOPTIONS\n  -r, --repo=repo  (required) the GitHub repository to connect\n\nEXAMPLES\n  $ heroku pipelines:connect example -r githuborg/reponame\n  Configuring pipeline... done\n```\n\n## `heroku pipelines:create [NAME]`\n\ncreate a new pipeline\n\n```\nUSAGE\n  $ heroku pipelines:create [NAME]\n\nARGUMENTS\n  NAME  name of pipeline, defaults to basename of app\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n  -s, --stage=stage    stage of first app in pipeline\n  -t, --team=team      team to use\n\nDESCRIPTION\n  An existing app must be specified as the first app in the pipeline.\n  The pipeline name will be inferred from the app name if not specified.\n  The stage of the app will be guessed based on its name if not specified.\n  The pipeline owner will be the user creating the pipeline if not specified with -t for teams or -o for orgs.\n\nEXAMPLES\n  $ heroku pipelines:create -a example-staging\n  ? Pipeline name: example\n  ? Stage of example-staging: staging\n  Creating example pipeline... done\n  Adding example-staging to example pipeline as staging... done\n```\n\n## `heroku pipelines:destroy PIPELINE`\n\ndestroy a pipeline\n\n```\nUSAGE\n  $ heroku pipelines:destroy PIPELINE\n\nARGUMENTS\n  PIPELINE  name of pipeline\n\nEXAMPLES\n  $ heroku pipelines:destroy example\n  Destroying example pipeline... done\n```\n\n## `heroku pipelines:diff`\n\ncompares the latest release of this app to its downstream app(s)\n\n```\nUSAGE\n  $ heroku pipelines:diff\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n\nEXAMPLES\n  $ heroku pipelines:diff --app murmuring-headland-14719\n```\n\n## `heroku pipelines:info PIPELINE`\n\nshow list of apps in a pipeline\n\n```\nUSAGE\n  $ heroku pipelines:info PIPELINE\n\nARGUMENTS\n  PIPELINE  pipeline to show\n\nOPTIONS\n  --json  output in json format\n\nEXAMPLES\n  $ heroku pipelines:info example\n  === example\n  owner: my-team (team)\n\n  app name                     stage\n  ───────────────────────────  ──────────\n  ⬢ example-pr-16              review\n  ⬢ example-pr-19              review\n  ⬢ example-pr-23              review\n  ⬢ example-staging            staging\n  ⬢ example-staging-2          staging\n  ⬢ example-production         production\n```\n\n## `heroku pipelines:list`\n\nlist pipelines you have access to\n\n```\nUSAGE\n  $ heroku pipelines:list\n\nOPTIONS\n  --json  output in json format\n\nEXAMPLES\n  $ heroku pipelines\n  === My Pipelines\n  example\n  sushi\n```\n\n## `heroku pipelines:open PIPELINE`\n\nopen a pipeline in dashboard\n\n```\nUSAGE\n  $ heroku pipelines:open PIPELINE\n\nARGUMENTS\n  PIPELINE  name of pipeline\n\nEXAMPLES\n  $ heroku pipelines:open example\n```\n\n## `heroku pipelines:promote`\n\npromote the latest release of this app to its downstream app(s)\n\n```\nUSAGE\n  $ heroku pipelines:promote\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n  -t, --to=to          comma separated list of apps to promote to\n\nEXAMPLES\n  $ heroku pipelines:promote -a example-staging\n  Promoting example-staging to example (production)... done, v23\n  Promoting example-staging to example-admin (production)... done, v54\n\n  $ heroku pipelines:promote -a example-staging --to my-production-app1,my-production-app2\n  Starting promotion to apps: my-production-app1,my-production-app2... done\n  Waiting for promotion to complete... done\n  Promotion successful\n  my-production-app1: succeeded\n  my-production-app2: succeeded\n```\n\n## `heroku pipelines:remove`\n\nremove this app from its pipeline\n\n```\nUSAGE\n  $ heroku pipelines:remove\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n\nEXAMPLES\n  $ heroku pipelines:remove -a example-admin\n  Removing example-admin... done\n```\n\n## `heroku pipelines:rename PIPELINE NAME`\n\nrename a pipeline\n\n```\nUSAGE\n  $ heroku pipelines:rename PIPELINE NAME\n\nARGUMENTS\n  PIPELINE  current name of pipeline\n  NAME      new name of pipeline\n\nEXAMPLES\n  $ heroku pipelines:rename example www\n  Renaming example pipeline to www... done\n```\n\n## `heroku pipelines:setup [NAME] [REPO]`\n\nbootstrap a new pipeline with common settings and create a production and staging app (requires a fully formed app.json in the repo)\n\n```\nUSAGE\n  $ heroku pipelines:setup [NAME] [REPO]\n\nARGUMENTS\n  NAME  name of pipeline\n  REPO  a GitHub repository to connect the pipeline to\n\nOPTIONS\n  -t, --team=team  team to use\n  -y, --yes        accept all default settings without prompting\n\nEXAMPLES\n  $ heroku pipelines:setup example githuborg/reponame -o example-org\n  ? Automatically deploy the master branch to staging? Yes\n  ? Wait for CI to pass before deploying the master branch to staging? Yes\n  ? Enable review apps? Yes\n  ? Automatically create review apps for every PR? Yes\n  ? Automatically destroy idle review apps after 5 days? Yes\n  ? Enable automatic Heroku CI test runs? Yes\n  Creating pipeline... done\n  Linking to repo... done\n  Creating production and staging apps (⬢ example and ⬢ example-staging)\n  Configuring pipeline... done\n  View your new pipeline by running `heroku pipelines:open e5a55ffa-de3f-11e6-a245-3c15c2e6bc1e`\n```\n\n## `heroku pipelines:transfer OWNER`\n\ntransfer ownership of a pipeline\n\n```\nUSAGE\n  $ heroku pipelines:transfer OWNER\n\nARGUMENTS\n  OWNER  the owner to transfer the pipeline to\n\nOPTIONS\n  -c, --confirm=confirm\n  -p, --pipeline=pipeline  (required) name of pipeline\n\nEXAMPLES\n  $ heroku pipelines:transfer me@example.com -p example\n  === example\n\n  app name              stage\n  ────────────────────  ───────────\n  ⬢ example-dev         development\n  ⬢ example-staging     staging\n  ⬢ example-prod        production\n\n    ▸    This will transfer example and all of the listed apps to the me@example.com account\n    ▸    to proceed, type example or re-run this command with --confirm example\n  > example\n  Transferring example pipeline to the me@example.com account... done\n\n  $ heroku pipelines:transfer acme-widgets -p example\n  === example\n\n  app name              stage\n  ────────────────────  ───────────\n  ⬢ example-dev         development\n  ⬢ example-staging     staging\n  ⬢ example-prod        production\n\n    ▸    This will transfer example and all of the listed apps to the acme-widgets team\n    ▸    to proceed, type example or re-run this command with --confirm example\n  > example\n\n  Transferring example pipeline to the acme-widgets team... done\n```\n\n## `heroku reviewapps:disable`\n\ndisable review apps or settings on an existing pipeline\n\n```\nUSAGE\n  $ heroku reviewapps:disable\n\nOPTIONS\n  -a, --app=app            (required) parent app used by review apps\n  -p, --pipeline=pipeline  (required) name of pipeline\n  --autodeploy             disable autodeployments\n  --autodestroy            disable automatically destroying review apps\n\nEXAMPLES\n  $ heroku reviewapps:disable -p mypipeline -a myapp --autodeploy\n  Disabling auto deployment ...\n  Configuring pipeline... done\n```\n\n## `heroku reviewapps:enable`\n\nenable review apps and/or settings on an existing pipeline\n\n```\nUSAGE\n  $ heroku reviewapps:enable\n\nOPTIONS\n  -a, --app=app            (required) parent app used by review apps\n  -p, --pipeline=pipeline  (required) name of pipeline\n  --autodeploy             autodeploy the review app\n  --autodestroy            autodestroy the review app\n\nEXAMPLES\n  $ heroku reviewapps:enable -p mypipeline --a myapp --autodeploy --autodestroy\n  Enabling review apps ...\n  Enabling auto deployment ...\n  Enabling auto destroy ...\n  Configuring pipeline... done\n```\n<!-- commandsstop -->\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/heroku/cli.git"
  },
  "scripts": {
    "autotest": "supervisor -q -n exit -x ./node_modules/.bin/mocha -- -b",
    "postpublish": "rm oclif.manifest.json",
    "prepack": "oclif-dev manifest",
    "test": "nyc mocha",
    "version": "oclif-dev readme && git add README.md"
  },
  "version": "7.18.0"
}
