{
  "_args": [
    [
      {
        "raw": "@heroku-cli/plugin-certs-v5@^7.18.0",
        "scope": "@heroku-cli",
        "escapedName": "@heroku-cli%2fplugin-certs-v5",
        "name": "@heroku-cli/plugin-certs-v5",
        "rawSpec": "^7.18.0",
        "spec": ">=7.18.0 <8.0.0",
        "type": "range"
      },
      "C:\\Local Disk (E)\\Block Chain\\express\\assignment\\node_modules\\heroku"
    ]
  ],
  "_from": "@heroku-cli/plugin-certs-v5@^7.18.0",
  "_hasShrinkwrap": false,
  "_id": "@heroku-cli/plugin-certs-v5@7.18.0",
  "_location": "/@heroku-cli/plugin-certs-v5",
  "_nodeVersion": "10.12.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/plugin-certs-v5_7.18.0_1539753486587_0.874406953080068"
  },
  "_npmUser": {
    "name": "dickeyxxx",
    "email": "dickeytk+npm@gmail.com"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@heroku-cli/plugin-certs-v5@^7.18.0",
    "scope": "@heroku-cli",
    "escapedName": "@heroku-cli%2fplugin-certs-v5",
    "name": "@heroku-cli/plugin-certs-v5",
    "rawSpec": "^7.18.0",
    "spec": ">=7.18.0 <8.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/heroku"
  ],
  "_resolved": "https://registry.npmjs.org/@heroku-cli/plugin-certs-v5/-/plugin-certs-v5-7.18.0.tgz",
  "_shasum": "569cc1d3970837671d3d671edc9ed92d84ff3db2",
  "_shrinkwrap": null,
  "_spec": "@heroku-cli/plugin-certs-v5@^7.18.0",
  "_where": "C:\\Local Disk (E)\\Block Chain\\express\\assignment\\node_modules\\heroku",
  "author": {
    "name": "Ransom Briggs rbriggs@heroku.com"
  },
  "bugs": {
    "url": "https://github.com/heroku/cli/issues"
  },
  "cli-engine": {
    "bin": "heroku",
    "commands": "./commands",
    "topics": {
      "certs": {
        "description": "a topic for the ssl plugin"
      }
    },
    "repositoryPrefix": "<%- repo %>/blob/v<%- version %>/packages/certs-v5/<%- commandPath %>"
  },
  "dependencies": {
    "co": "4.6.0",
    "co-wait": "0.0.0",
    "date-fns": "^1.29.0",
    "heroku-cli-util": "^8.0.10",
    "inquirer": "^6.2.0",
    "lodash": "4.17.11",
    "psl": "^1.1.29"
  },
  "description": "heroku ssl plugin",
  "devDependencies": {
    "@oclif/dev-cli": "^1.19.2",
    "@oclif/plugin-legacy": "^1.1.2",
    "chai": "^4.2.0",
    "chai-as-promised": "^7.1.1",
    "lolex": "^3.0.0",
    "mocha": "^5.2.0",
    "nock": "^9.3.3",
    "nyc": "^13.1.0",
    "proxyquire": "^2.1.0",
    "sinon": "^2.3.6",
    "sinon-chai": "^2.14.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-L0rmE62oJFLIapDxKR3yjAH0DUPFisnPzuTpUbKsZpwn5Tqm6DD752w/usLAPPdoXYO5KDY2sp24Hb45MhygxA==",
    "shasum": "569cc1d3970837671d3d671edc9ed92d84ff3db2",
    "tarball": "https://registry.npmjs.org/@heroku-cli/plugin-certs-v5/-/plugin-certs-v5-7.18.0.tgz",
    "fileCount": 33,
    "unpackedSize": 63802,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbxsYRCRA9TVsSAnZWagAAc90P/1SbowTQ18v11ld2f8Dd\nsP/df9WCQF4p+/ynRRR3sLSRWyDi8MSAI7cTpBPa2O2kpYNyAnYnQtlhbPfU\ndT62SFOS7mMfuVoeDy72Tmfm2qRGSvAXMDkOtYYueXgVaCEhDMHi9slM3W0J\n8CuMUKR0zewVctqszdY7NvLwwr5rBAR/XkWfgic50BSL7lX+G3oZUt2og+9D\nkTZczDIlmJNZWcpkz57qF5RH3ohV07YL3j67eKgbppS3xtojkjpUIksPB/fR\npqtMi3wxRpjn9AnAr2ahdTO3/+yQvRRBx1KVDivnpsG/w0cxVE6K05xsnw9O\nppm8ZmIQAslM3o+ZOTrtMXJZp6BK9c72zdAh0IAn0wQeb4hlJI3eEz79narR\nQI1gaGax/cR2oExhSoOwUq55SojIxWVCKpaMv+9FSAEnpYtX9ZeFYwvCwWz1\nkxAb9j+xgQ+9P2ttQ3UkIgZPDd/LcUfifF5HNWDGV/YVYKWFbiOdH/aun6NX\nxT5p83Q7xlcDFFGiIQDCmaP0/DirCf13zWExkrCf88f/ALlZ4wIWCI/L/A3E\no9PXuBvMYhHHKWMiBH0iZMZ2URXecOlw+a4NpHirI01C3FmS+10KfbUVxKO0\nut9xFmOZFvvaF5qcAxs3ad/CZ3OG9y/y8axGqmWnzc5O+KfX+uLXA92EgqRo\nKtsE\r\n=fKfQ\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "files": [
    "oclif.manifest.json",
    "index.js",
    "lib",
    "commands"
  ],
  "homepage": "https://github.com/heroku/cli/tree/master/packages/certs-v5",
  "keywords": [
    "heroku-plugin"
  ],
  "license": "ISC",
  "maintainers": [
    {
      "name": "alindeman",
      "email": "andy@lindeman.io"
    },
    {
      "name": "alouie-sfdc",
      "email": "alouie@heroku.com"
    },
    {
      "name": "amanmibra",
      "email": "amanmibra@gmail.com"
    },
    {
      "name": "amerine",
      "email": "mark@amerine.net"
    },
    {
      "name": "bigkevmcd",
      "email": "kevin@bigkevmcd.com"
    },
    {
      "name": "brettgoulder",
      "email": "bgoulder@salesforce.com"
    },
    {
      "name": "codefinger",
      "email": "joe@heroku.com"
    },
    {
      "name": "cyberdelia",
      "email": "timothee.peignier@tryphon.org"
    },
    {
      "name": "cyx",
      "email": "cyx@cyx.is"
    },
    {
      "name": "dhaulagiri",
      "email": "brian.runnells+github@gmail.com"
    },
    {
      "name": "dickeyxxx",
      "email": "dickeytk+npm@gmail.com"
    },
    {
      "name": "dmathieu",
      "email": "damien@heroku.com"
    },
    {
      "name": "elbandito",
      "email": "longoria.public@gmail.com"
    },
    {
      "name": "halorgium",
      "email": "tim@spork.in"
    },
    {
      "name": "hone",
      "email": "hone02@gmail.com"
    },
    {
      "name": "idangazit",
      "email": "idan@gazit.me"
    },
    {
      "name": "itops",
      "email": "npmjs@heroku.com"
    },
    {
      "name": "joshwlewis",
      "email": "josh.w.lewis@gmail.com"
    },
    {
      "name": "mimen",
      "email": "miladmaaan@gmail.com"
    },
    {
      "name": "ojacobson",
      "email": "owen@grimoire.ca"
    },
    {
      "name": "ransombriggs",
      "email": "rbriggs@heroku.com"
    },
    {
      "name": "rasphilco",
      "email": "philipe@heroku.com"
    },
    {
      "name": "raulb",
      "email": "ra.barroso@gmail.com"
    },
    {
      "name": "ryanbrainard",
      "email": "ryan@ryanbrainard.com"
    },
    {
      "name": "sibson",
      "email": "sibson@gmail.com"
    },
    {
      "name": "sigmavirus24",
      "email": "graffatcolmingov+npm@gmail.com"
    },
    {
      "name": "stephenbarlow",
      "email": "sbarlow@heroku.com"
    },
    {
      "name": "troelsthomsen",
      "email": "troethom@gmail.com"
    },
    {
      "name": "uhoh-itsmaciek",
      "email": "m.sakrejda@gmail.com"
    },
    {
      "name": "yann_ck",
      "email": "yannick.schutz@gmail.com"
    }
  ],
  "name": "@heroku-cli/plugin-certs-v5",
  "optionalDependencies": {},
  "readme": "heroku-certs\n===========\n\n[![Build Status](https://travis-ci.org/heroku/heroku-certs.svg?branch=master)](https://travis-ci.org/heroku/heroku-certs)\n[![codecov](https://codecov.io/gh/heroku/heroku-certs/branch/master/graph/badge.svg)](https://codecov.io/gh/heroku/heroku-certs)\n\n## Commands\n\n<!-- commands -->\n* [`heroku certs`](#heroku-certs)\n* [`heroku certs:add CRT KEY`](#heroku-certsadd-crt-key)\n* [`heroku certs:auto`](#heroku-certsauto)\n* [`heroku certs:auto:disable`](#heroku-certsautodisable)\n* [`heroku certs:auto:enable`](#heroku-certsautoenable)\n* [`heroku certs:auto:refresh`](#heroku-certsautorefresh)\n* [`heroku certs:chain`](#heroku-certschain)\n* [`heroku certs:generate DOMAIN`](#heroku-certsgenerate-domain)\n* [`heroku certs:info`](#heroku-certsinfo)\n* [`heroku certs:key`](#heroku-certskey)\n* [`heroku certs:remove`](#heroku-certsremove)\n* [`heroku certs:rollback`](#heroku-certsrollback)\n* [`heroku certs:update CRT KEY`](#heroku-certsupdate-crt-key)\n\n## `heroku certs`\n\nlist SSL certificates for an app\n\n```\nUSAGE\n  $ heroku certs\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n```\n\n_See code: [commands/certs/index.js](https://github.com/heroku/cli/blob/v7.18.0/packages/certs-v5/commands/certs/index.js)_\n\n## `heroku certs:add CRT KEY`\n\nadd an SSL certificate to an app\n\n```\nUSAGE\n  $ heroku certs:add CRT KEY\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n  --bypass             bypass the trust chain completion step\n  --domains=domains    domains to create after certificate upload\n  --type=type          type to create, either 'sni' or 'endpoint'\n\nDESCRIPTION\n  Note: certificates with PEM encoding are also valid\n\nEXAMPLES\n  $ heroku certs:add example.com.crt example.com.key\n\n  Certificate Intermediary:\n  $ heroku certs:add intermediary.crt example.com.crt example.com.key\n```\n\n_See code: [commands/certs/add.js](https://github.com/heroku/cli/blob/v7.18.0/packages/certs-v5/commands/certs/add.js)_\n\n## `heroku certs:auto`\n\nshow ACM status for an app\n\n```\nUSAGE\n  $ heroku certs:auto\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n```\n\n_See code: [commands/certs/auto/index.js](https://github.com/heroku/cli/blob/v7.18.0/packages/certs-v5/commands/certs/auto/index.js)_\n\n## `heroku certs:auto:disable`\n\ndisable ACM for an app\n\n```\nUSAGE\n  $ heroku certs:auto:disable\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n```\n\n_See code: [commands/certs/auto/disable.js](https://github.com/heroku/cli/blob/v7.18.0/packages/certs-v5/commands/certs/auto/disable.js)_\n\n## `heroku certs:auto:enable`\n\nenable ACM status for an app\n\n```\nUSAGE\n  $ heroku certs:auto:enable\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n```\n\n_See code: [commands/certs/auto/enable.js](https://github.com/heroku/cli/blob/v7.18.0/packages/certs-v5/commands/certs/auto/enable.js)_\n\n## `heroku certs:auto:refresh`\n\nrefresh ACM for an app\n\n```\nUSAGE\n  $ heroku certs:auto:refresh\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n```\n\n_See code: [commands/certs/auto/refresh.js](https://github.com/heroku/cli/blob/v7.18.0/packages/certs-v5/commands/certs/auto/refresh.js)_\n\n## `heroku certs:chain`\n\nprint an ordered & complete chain for a certificate\n\n```\nUSAGE\n  $ heroku certs:chain\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n```\n\n_See code: [commands/certs/chain.js](https://github.com/heroku/cli/blob/v7.18.0/packages/certs-v5/commands/certs/chain.js)_\n\n## `heroku certs:generate DOMAIN`\n\ngenerate a key and a CSR or self-signed certificate\n\n```\nUSAGE\n  $ heroku certs:generate DOMAIN\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n  --area=area          sub-country area (state, province, etc.) of owner\n  --city=city          city of owner\n  --country=country    country of owner, as a two-letter ISO country code\n  --keysize=keysize    RSA key size in bits (default: 2048)\n  --now                do not prompt for any owner information\n  --owner=owner        name of organization certificate belongs to\n  --selfsigned         generate a self-signed certificate instead of a CSR\n  --subject=subject    specify entire certificate subject\n\nDESCRIPTION\n  Generate a key and certificate signing request (or self-signed certificate)\n  for an app. Prompts for information to put in the certificate unless --now\n  is used, or at least one of the --subject, --owner, --country, --area, or\n  --city options is specified.\n\nEXAMPLES\n  $ heroku certs:generate example.com\n```\n\n_See code: [commands/certs/generate.js](https://github.com/heroku/cli/blob/v7.18.0/packages/certs-v5/commands/certs/generate.js)_\n\n## `heroku certs:info`\n\nshow certificate information for an SSL certificate\n\n```\nUSAGE\n  $ heroku certs:info\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n  --endpoint=endpoint  endpoint to check info on\n  --name=name          name to check info on\n```\n\n_See code: [commands/certs/info.js](https://github.com/heroku/cli/blob/v7.18.0/packages/certs-v5/commands/certs/info.js)_\n\n## `heroku certs:key`\n\nprint the correct key for the given certificate\n\n```\nUSAGE\n  $ heroku certs:key\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n\nDESCRIPTION\n  You must pass one single certificate, and one or more keys.\n  The first key that signs the certificate will be printed back.\n\nEXAMPLES\n  $ heroku certs:key example.com.crt example.com.key\n```\n\n_See code: [commands/certs/key.js](https://github.com/heroku/cli/blob/v7.18.0/packages/certs-v5/commands/certs/key.js)_\n\n## `heroku certs:remove`\n\nremove an SSL certificate from an app\n\n```\nUSAGE\n  $ heroku certs:remove\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n  --endpoint=endpoint  endpoint to remove\n  --name=name          name to remove\n```\n\n_See code: [commands/certs/remove.js](https://github.com/heroku/cli/blob/v7.18.0/packages/certs-v5/commands/certs/remove.js)_\n\n## `heroku certs:rollback`\n\nrollback an SSL certificate from an app\n\n```\nUSAGE\n  $ heroku certs:rollback\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n  --endpoint=endpoint  endpoint to rollback\n  --name=name          name to rollback\n```\n\n_See code: [commands/certs/rollback.js](https://github.com/heroku/cli/blob/v7.18.0/packages/certs-v5/commands/certs/rollback.js)_\n\n## `heroku certs:update CRT KEY`\n\nupdate an SSL certificate on an app\n\n```\nUSAGE\n  $ heroku certs:update CRT KEY\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n  --bypass             bypass the trust chain completion step\n  --endpoint=endpoint  endpoint to update\n  --name=name          name to update\n\nDESCRIPTION\n  Note: certificates with PEM encoding are also valid\n\nEXAMPLES\n  $ heroku certs:update example.com.crt example.com.key\n\n  Certificate Intermediary:\n  $ heroku certs:update intermediary.crt example.com.crt example.com.key\n```\n\n_See code: [commands/certs/update.js](https://github.com/heroku/cli/blob/v7.18.0/packages/certs-v5/commands/certs/update.js)_\n<!-- commandsstop -->\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/heroku/cli.git"
  },
  "scripts": {
    "postpublish": "rm oclif.manifest.json",
    "prepack": "oclif-dev manifest",
    "test": "nyc mocha",
    "version": "oclif-dev readme && git add README.md"
  },
  "version": "7.18.0"
}
