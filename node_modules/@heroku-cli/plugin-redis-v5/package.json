{
  "_args": [
    [
      {
        "raw": "@heroku-cli/plugin-redis-v5@^7.18.0",
        "scope": "@heroku-cli",
        "escapedName": "@heroku-cli%2fplugin-redis-v5",
        "name": "@heroku-cli/plugin-redis-v5",
        "rawSpec": "^7.18.0",
        "spec": ">=7.18.0 <8.0.0",
        "type": "range"
      },
      "C:\\Local Disk (E)\\Block Chain\\express\\assignment\\node_modules\\heroku"
    ]
  ],
  "_from": "@heroku-cli/plugin-redis-v5@^7.18.0",
  "_hasShrinkwrap": false,
  "_id": "@heroku-cli/plugin-redis-v5@7.18.0",
  "_location": "/@heroku-cli/plugin-redis-v5",
  "_nodeVersion": "10.12.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/plugin-redis-v5_7.18.0_1539753580249_0.2149299646585534"
  },
  "_npmUser": {
    "name": "dickeyxxx",
    "email": "dickeytk+npm@gmail.com"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {
    "asn1": "0.2.4",
    "semver": "5.6.0",
    "streamsearch": "0.1.2"
  },
  "_requested": {
    "raw": "@heroku-cli/plugin-redis-v5@^7.18.0",
    "scope": "@heroku-cli",
    "escapedName": "@heroku-cli%2fplugin-redis-v5",
    "name": "@heroku-cli/plugin-redis-v5",
    "rawSpec": "^7.18.0",
    "spec": ">=7.18.0 <8.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/heroku"
  ],
  "_resolved": "https://registry.npmjs.org/@heroku-cli/plugin-redis-v5/-/plugin-redis-v5-7.18.0.tgz",
  "_shasum": "dcd50b4426f0d3d4e11056b37ec0c16885601b8d",
  "_shrinkwrap": null,
  "_spec": "@heroku-cli/plugin-redis-v5@^7.18.0",
  "_where": "C:\\Local Disk (E)\\Block Chain\\express\\assignment\\node_modules\\heroku",
  "author": {
    "name": "Heroku"
  },
  "bugs": {
    "url": "https://github.com/heroku/cli/issues"
  },
  "cli-engine": {
    "bin": "heroku",
    "topics": {
      "redis": {
        "description": "manage heroku redis instances"
      }
    },
    "repositoryPrefix": "<%- repo %>/blob/v<%- version %>/packages/redis-v5/<%- commandPath %>"
  },
  "dependencies": {
    "heroku-cli-util": "^8.0.10",
    "redis-parser": "^3.0.0",
    "ssh2": "^0.6.1"
  },
  "description": "Heroku plugin to manage Heroku Redis",
  "devDependencies": {
    "@oclif/dev-cli": "^1.19.2",
    "@oclif/plugin-legacy": "^1.1.2",
    "chai": "^4.2.0",
    "chai-as-promised": "^7.1.1",
    "lolex": "^3.0.0",
    "mocha": "^5.2.0",
    "nock": "^9.2.5",
    "nyc": "^13.1.0",
    "proxyquire": "^2.1.0",
    "sinon": "^5.0.7"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-JEcEe/l1FAFglbdC1E+NQt28C1CYDWJkYXpkiphYO6Hjzw5dKHTwGQqfmhgVGbfg5vmT7LcHl+tye2RYI+AE0g==",
    "shasum": "dcd50b4426f0d3d4e11056b37ec0c16885601b8d",
    "tarball": "https://registry.npmjs.org/@heroku-cli/plugin-redis-v5/-/plugin-redis-v5-7.18.0.tgz",
    "fileCount": 16,
    "unpackedSize": 32241,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbxsZsCRA9TVsSAnZWagAAQkoP/0Yo1/MUiW/W5+nNGjyG\n49mEw0YPn0SlPLcdaHTI169wLX8I5MWHNozJrRR6xmU/EnhMUvd7m+AnK8/H\noK62MBbikkaq/zvMa0w9Rs+n6pWNY5frLZ60clLI+wgi4Q3NhdCJ3HcDCzjE\ngilz6LqlaIV36bNpumS7fkU2+zyLHtIks2FyjVQemGmqvT2uzbjZNmR5mxCF\nv5HG9wMnmmt2N1V2yI7LTbs0WODait/cBNio/2oFoj872uL4fpkdSd+OpTda\n+nPEHxa8Kj0o3zqbqLGVR6ahIT51QIQKWhk/mT3r/5WmAlN4Uyjd42fjLYjx\n5Mcm4FPPF7GSUuppvXYEZb6KGo9Y+qMTNER6O7AP6N+blF91KoSYM7uRmPyX\n1uBCdHtnU37PvYb8L4rFE17Xwb1kxGgSFy+6W3ifFKia16Sk9cWquaPyZmx9\n2a8hN8d7YpvyQMD64h/srb9zWVMZc2kBhfw7JnEfNl2xj3wY4Bt3M/x67r20\neRNN/McriP6WerNDp2/3HRZOiCncbasOzFc7w73wXcQzWG0NZU3fw0eAl920\nuCKEYMLN2/Q6oRtnYg5UVoukxiCrBA+CSCKxhfL42jVCvcULTDfQJ30VIPMJ\nJhtFptyqH/n//ln17N+rz+LlPnYYUMkRyLPJgDVcbh0t6TscY9OCSafR4gyl\nBkGg\r\n=4imY\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "files": [
    "oclif.manifest.json",
    "index.js",
    "lib",
    "commands"
  ],
  "homepage": "https://github.com/heroku/cli/tree/master/packages/redis-v5",
  "keywords": [
    "heroku-plugin"
  ],
  "license": "ISC",
  "main": "index.js",
  "maintainers": [
    {
      "name": "alindeman",
      "email": "andy@lindeman.io"
    },
    {
      "name": "alouie-sfdc",
      "email": "alouie@heroku.com"
    },
    {
      "name": "amanmibra",
      "email": "amanmibra@gmail.com"
    },
    {
      "name": "amerine",
      "email": "mark@amerine.net"
    },
    {
      "name": "bigkevmcd",
      "email": "kevin@bigkevmcd.com"
    },
    {
      "name": "brettgoulder",
      "email": "bgoulder@salesforce.com"
    },
    {
      "name": "codefinger",
      "email": "joe@heroku.com"
    },
    {
      "name": "cyberdelia",
      "email": "timothee.peignier@tryphon.org"
    },
    {
      "name": "cyx",
      "email": "cyx@cyx.is"
    },
    {
      "name": "dhaulagiri",
      "email": "brian.runnells+github@gmail.com"
    },
    {
      "name": "dickeyxxx",
      "email": "dickeytk+npm@gmail.com"
    },
    {
      "name": "dmathieu",
      "email": "damien@heroku.com"
    },
    {
      "name": "elbandito",
      "email": "longoria.public@gmail.com"
    },
    {
      "name": "halorgium",
      "email": "tim@spork.in"
    },
    {
      "name": "hone",
      "email": "hone02@gmail.com"
    },
    {
      "name": "idangazit",
      "email": "idan@gazit.me"
    },
    {
      "name": "itops",
      "email": "npmjs@heroku.com"
    },
    {
      "name": "joshwlewis",
      "email": "josh.w.lewis@gmail.com"
    },
    {
      "name": "mimen",
      "email": "miladmaaan@gmail.com"
    },
    {
      "name": "ojacobson",
      "email": "owen@grimoire.ca"
    },
    {
      "name": "ransombriggs",
      "email": "rbriggs@heroku.com"
    },
    {
      "name": "rasphilco",
      "email": "philipe@heroku.com"
    },
    {
      "name": "raulb",
      "email": "ra.barroso@gmail.com"
    },
    {
      "name": "ryanbrainard",
      "email": "ryan@ryanbrainard.com"
    },
    {
      "name": "sibson",
      "email": "sibson@gmail.com"
    },
    {
      "name": "sigmavirus24",
      "email": "graffatcolmingov+npm@gmail.com"
    },
    {
      "name": "stephenbarlow",
      "email": "sbarlow@heroku.com"
    },
    {
      "name": "troelsthomsen",
      "email": "troethom@gmail.com"
    },
    {
      "name": "uhoh-itsmaciek",
      "email": "m.sakrejda@gmail.com"
    },
    {
      "name": "yann_ck",
      "email": "yannick.schutz@gmail.com"
    }
  ],
  "name": "@heroku-cli/plugin-redis-v5",
  "optionalDependencies": {},
  "readme": "# heroku-redis-jsplugin\n\nAn Heroku CLI plugin for managing Heroku Redis instances.\n\n## Installation\n\nUse ``plugins:install`` to install it:\n\n```console\nheroku plugins:install heroku-redis\n```\n\n## Usage\n\nCLI commands are described in the [Heroku Redis devcenter article](https://devcenter.heroku.com/articles/heroku-redis#using-the-cli).\n\n\n## Publishing\n\nTo publish new versions, see\n[the data plugin documentation](https://github.com/heroku/dod-ops/blob/master/playbooks/cli-plugins.md).\n\n<!-- commands -->\n* [`heroku redis [DATABASE]`](#heroku-redis-database)\n* [`heroku redis:cli [DATABASE]`](#heroku-rediscli-database)\n* [`heroku redis:credentials [DATABASE]`](#heroku-rediscredentials-database)\n* [`heroku redis:info [DATABASE]`](#heroku-redisinfo-database)\n* [`heroku redis:maintenance [DATABASE]`](#heroku-redismaintenance-database)\n* [`heroku redis:maxmemory [DATABASE]`](#heroku-redismaxmemory-database)\n* [`heroku redis:promote DATABASE`](#heroku-redispromote-database)\n* [`heroku redis:timeout [DATABASE]`](#heroku-redistimeout-database)\n* [`heroku redis:wait [DATABASE]`](#heroku-rediswait-database)\n\n## `heroku redis [DATABASE]`\n\ngets information about redis\n\n```\nUSAGE\n  $ heroku redis [DATABASE]\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n```\n\n## `heroku redis:cli [DATABASE]`\n\nopens a redis prompt\n\n```\nUSAGE\n  $ heroku redis:cli [DATABASE]\n\nOPTIONS\n  -a, --app=app          (required) app to run command against\n  -c, --confirm=confirm\n  -r, --remote=remote    git remote of app to use\n```\n\n## `heroku redis:credentials [DATABASE]`\n\ndisplay credentials information\n\n```\nUSAGE\n  $ heroku redis:credentials [DATABASE]\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n  --reset              reset credentials\n```\n\n## `heroku redis:info [DATABASE]`\n\ngets information about redis\n\n```\nUSAGE\n  $ heroku redis:info [DATABASE]\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n```\n\n## `heroku redis:maintenance [DATABASE]`\n\nmanage maintenance windows\n\n```\nUSAGE\n  $ heroku redis:maintenance [DATABASE]\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -f, --force          start maintenance without entering application maintenance mode\n  -r, --remote=remote  git remote of app to use\n  -w, --window=window  set weekly UTC maintenance window\n  --run                start maintenance\n\nDESCRIPTION\n  Set or change the maintenance window for your Redis instance\n```\n\n## `heroku redis:maxmemory [DATABASE]`\n\nset the key eviction policy\n\n```\nUSAGE\n  $ heroku redis:maxmemory [DATABASE]\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -p, --policy=policy  (required) set policy name\n  -r, --remote=remote  git remote of app to use\n\nDESCRIPTION\n  Set the key eviction policy when instance reaches its storage limit. Available policies for key eviction include:\n\n       noeviction      # returns errors when memory limit is reached\n       allkeys-lru     # removes less recently used keys first\n       volatile-lru    # removes less recently used keys first that have an expiry set\n       allkeys-random  # evicts random keys\n       volatile-random # evicts random keys but only those that have an expiry set\n       volatile-ttl    # only evicts keys with an expiry set and a short TTL\n```\n\n## `heroku redis:promote DATABASE`\n\nsets DATABASE as your REDIS_URL\n\n```\nUSAGE\n  $ heroku redis:promote DATABASE\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n```\n\n## `heroku redis:timeout [DATABASE]`\n\nset the number of seconds to wait before killing idle connections\n\n```\nUSAGE\n  $ heroku redis:timeout [DATABASE]\n\nOPTIONS\n  -a, --app=app          (required) app to run command against\n  -r, --remote=remote    git remote of app to use\n  -s, --seconds=seconds  set timeout value\n\nDESCRIPTION\n  Sets the number of seconds to wait before killing idle connections. A value of zero means that connections will not be \n  closed.\n```\n\n## `heroku redis:wait [DATABASE]`\n\nwait for Redis instance to be available\n\n```\nUSAGE\n  $ heroku redis:wait [DATABASE]\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n```\n<!-- commandsstop -->\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/heroku/cli.git"
  },
  "scripts": {
    "postpublish": "rm oclif.manifest.json",
    "prepack": "oclif-dev manifest",
    "test": "nyc mocha",
    "version": "oclif-dev readme && git add README.md"
  },
  "version": "7.18.0"
}
