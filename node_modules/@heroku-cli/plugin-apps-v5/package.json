{
  "_args": [
    [
      {
        "raw": "@heroku-cli/plugin-apps-v5@^7.18.0",
        "scope": "@heroku-cli",
        "escapedName": "@heroku-cli%2fplugin-apps-v5",
        "name": "@heroku-cli/plugin-apps-v5",
        "rawSpec": "^7.18.0",
        "spec": ">=7.18.0 <8.0.0",
        "type": "range"
      },
      "C:\\Local Disk (E)\\Block Chain\\express\\assignment\\node_modules\\heroku"
    ]
  ],
  "_from": "@heroku-cli/plugin-apps-v5@^7.18.0",
  "_hasShrinkwrap": false,
  "_id": "@heroku-cli/plugin-apps-v5@7.18.0",
  "_location": "/@heroku-cli/plugin-apps-v5",
  "_nodeVersion": "10.12.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/plugin-apps-v5_7.18.0_1539753442819_0.8024615300818152"
  },
  "_npmUser": {
    "name": "dickeyxxx",
    "email": "dickeytk+npm@gmail.com"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@heroku-cli/plugin-apps-v5@^7.18.0",
    "scope": "@heroku-cli",
    "escapedName": "@heroku-cli%2fplugin-apps-v5",
    "name": "@heroku-cli/plugin-apps-v5",
    "rawSpec": "^7.18.0",
    "spec": ">=7.18.0 <8.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/heroku"
  ],
  "_resolved": "https://registry.npmjs.org/@heroku-cli/plugin-apps-v5/-/plugin-apps-v5-7.18.0.tgz",
  "_shasum": "5058b706237fab8043b3f4db02989fab7797f564",
  "_shrinkwrap": null,
  "_spec": "@heroku-cli/plugin-apps-v5@^7.18.0",
  "_where": "C:\\Local Disk (E)\\Block Chain\\express\\assignment\\node_modules\\heroku",
  "author": {
    "name": "Jeff Dickey",
    "url": "@jdxcode"
  },
  "bugs": {
    "url": "https://github.com/heroku/cli/issues"
  },
  "cli-engine": {
    "bin": "heroku",
    "topics": {
      "stack": {
        "description": "manage heroku stacks",
        "hidden": true
      }
    },
    "repositoryPrefix": "<%- repo %>/blob/v<%- version %>/packages/apps-v5/<%- commandPath %>"
  },
  "dependencies": {
    "@heroku-cli/command": "^8.2.0",
    "co": "^4.6.0",
    "filesize": "^3.5.11",
    "fs-extra": "^7.0.0",
    "heroku-cli-util": "^8.0.10",
    "inquirer": "^6.2.0",
    "js-yaml": "^3.9.1",
    "lodash": "^4.17.11",
    "shell-escape": "^0.2.0",
    "sparkline": "^0.2.0",
    "strftime": "^0.10.0",
    "term-img": "^2.1.0",
    "urijs": "1.19.1"
  },
  "description": "Heroku CLI plugin to manage apps.",
  "devDependencies": {
    "@oclif/dev-cli": "^1.19.2",
    "@oclif/plugin-legacy": "^1.1.2",
    "chai": "^4.2.0",
    "lolex": "^3.0.0",
    "mocha": "^5.2.0",
    "mockdate": "^2.0.2",
    "netrc-parser": "^3.1.6",
    "nock": "9.3.3",
    "proxyquire": "^2.1.0",
    "set-tz": "^0.1.0",
    "std-mocks": "1.0.1",
    "testdouble": "^3.8.2",
    "time-require": "0.1.2",
    "unexpected": "^10.39.1"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-QtyldWiCjioyTcPpdX+qWHg5A6/CONOuDCIfSm1yNBqfsibJbHmTRAGFDDQvn0AHQtunE0Qzc5dg0rhTFaGxKg==",
    "shasum": "5058b706237fab8043b3f4db02989fab7797f564",
    "tarball": "https://registry.npmjs.org/@heroku-cli/plugin-apps-v5/-/plugin-apps-v5-7.18.0.tgz",
    "fileCount": 61,
    "unpackedSize": 184792,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbxsXjCRA9TVsSAnZWagAAMsAP/3jHyNgPB8vnKdIWfp6z\nRN6XWwVf7U6jAVeyIa4Id0v6y2HZHqZKixkPjMCwONwcZRijodBqBZBnBZlK\nn8uMB8VvNBwSSaopuu6GQj+thkWMwwAch3u44nerARUdkck2dQNSmhoYr8Uq\nxOWfozD+exWAHpOCbp3bB7RQnI8hztzuIf4hugVZOM/BciAS2lUROv1zWucd\neOAq3n7++ELHnwTP6c9tJ6Ws8uxysSyoVs9k8nHUm2XJBOVXmmBhEYserAxL\nxhenrhpkhHyzwN+drchveuBu7tJFfXVIogLvGUf6j1BZX8GbInKUqndcl287\ndUPlPKbzSit8rLSoZuMyJrj2dQWSNrCzI8ppxzprTyhIvjX6kRe8r60OBCtI\nIFo5REX7NTFEwYoGpVStQtyor3VEcks6zXnw4gjF5k2Pw38rVCT4RvJmddY+\no2ik+My5Qvt4Qi1i5F1Gjn2X0MtR0qk9y96Os2QaSpp1yD9yU0RjROYLgKZA\n4ZrqT07tJW8Zu8aTjQWeFKB/0Rsb+v3jdY+n0T+vXaDCcFIOoLX7e7Nh5Sq4\nnjIMslRyTpEayu0aD7rZjDMkk64ycGUvoCPT9WU2i9Fs0W1u+GSACpTbq71t\nNODrIpogU/e+NXxK1+6dejA5TXFicmv2Y23MxpA62Z47Yz9U70Nm4Xlcfiuk\ndaJ1\r\n=efGm\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "files": [
    "/oclif.manifest.json",
    "assets",
    "src"
  ],
  "homepage": "https://github.com/heroku/cli/tree/master/packages/apps-v5",
  "keywords": [
    "heroku-plugin"
  ],
  "license": "ISC",
  "main": "src/index.js",
  "maintainers": [
    {
      "name": "alindeman",
      "email": "andy@lindeman.io"
    },
    {
      "name": "alouie-sfdc",
      "email": "alouie@heroku.com"
    },
    {
      "name": "amanmibra",
      "email": "amanmibra@gmail.com"
    },
    {
      "name": "amerine",
      "email": "mark@amerine.net"
    },
    {
      "name": "bigkevmcd",
      "email": "kevin@bigkevmcd.com"
    },
    {
      "name": "brettgoulder",
      "email": "bgoulder@salesforce.com"
    },
    {
      "name": "codefinger",
      "email": "joe@heroku.com"
    },
    {
      "name": "cyberdelia",
      "email": "timothee.peignier@tryphon.org"
    },
    {
      "name": "cyx",
      "email": "cyx@cyx.is"
    },
    {
      "name": "dhaulagiri",
      "email": "brian.runnells+github@gmail.com"
    },
    {
      "name": "dickeyxxx",
      "email": "dickeytk+npm@gmail.com"
    },
    {
      "name": "dmathieu",
      "email": "damien@heroku.com"
    },
    {
      "name": "elbandito",
      "email": "longoria.public@gmail.com"
    },
    {
      "name": "halorgium",
      "email": "tim@spork.in"
    },
    {
      "name": "hone",
      "email": "hone02@gmail.com"
    },
    {
      "name": "idangazit",
      "email": "idan@gazit.me"
    },
    {
      "name": "itops",
      "email": "npmjs@heroku.com"
    },
    {
      "name": "joshwlewis",
      "email": "josh.w.lewis@gmail.com"
    },
    {
      "name": "mimen",
      "email": "miladmaaan@gmail.com"
    },
    {
      "name": "ojacobson",
      "email": "owen@grimoire.ca"
    },
    {
      "name": "ransombriggs",
      "email": "rbriggs@heroku.com"
    },
    {
      "name": "rasphilco",
      "email": "philipe@heroku.com"
    },
    {
      "name": "raulb",
      "email": "ra.barroso@gmail.com"
    },
    {
      "name": "ryanbrainard",
      "email": "ryan@ryanbrainard.com"
    },
    {
      "name": "sibson",
      "email": "sibson@gmail.com"
    },
    {
      "name": "sigmavirus24",
      "email": "graffatcolmingov+npm@gmail.com"
    },
    {
      "name": "stephenbarlow",
      "email": "sbarlow@heroku.com"
    },
    {
      "name": "troelsthomsen",
      "email": "troethom@gmail.com"
    },
    {
      "name": "uhoh-itsmaciek",
      "email": "m.sakrejda@gmail.com"
    },
    {
      "name": "yann_ck",
      "email": "yannick.schutz@gmail.com"
    }
  ],
  "name": "@heroku-cli/plugin-apps-v5",
  "optionalDependencies": {},
  "publishConfig": {
    "access": "public"
  },
  "readme": "heroku-apps [![Circle CI](https://circleci.com/gh/heroku/heroku-apps.svg?style=svg)](https://circleci.com/gh/heroku/heroku-apps)\n===========\n\n[![Code Climate](https://codeclimate.com/github/heroku/heroku-apps/badges/gpa.svg)](https://codeclimate.com/github/heroku/heroku-apps)\n[![codecov](https://codecov.io/gh/heroku/heroku-apps/branch/master/graph/badge.svg)](https://codecov.io/gh/heroku/heroku-apps)\n[![npm version](https://badge.fury.io/js/heroku-apps.svg)](https://badge.fury.io/js/heroku-apps)\n[![License](https://img.shields.io/github/license/heroku/heroku-apps.svg)](https://github.com/heroku/heroku-apps/blob/master/LICENSE)\n[![Greenkeeper badge](https://badges.greenkeeper.io/heroku/heroku-apps.svg)](https://greenkeeper.io/)\n\nThis core plugin comes preinstalled to the [Heroku CLI](https://cli.heroku.com).\n\n<!-- usage -->\n```sh-session\n$ npm install -g @heroku-cli/plugin-apps-v5\n$ heroku COMMAND\nrunning command...\n$ heroku (-v|--version|version)\n@heroku-cli/plugin-apps-v5/7.18.0 darwin-x64 node-v10.12.0\n$ heroku --help [COMMAND]\nUSAGE\n  $ heroku COMMAND\n...\n```\n<!-- usagestop -->\n<!-- commands -->\n* [`heroku apps`](#heroku-apps)\n* [`heroku apps:create [APP]`](#heroku-appscreate-app)\n* [`heroku apps:destroy`](#heroku-appsdestroy)\n* [`heroku apps:errors`](#heroku-appserrors)\n* [`heroku apps:favorites`](#heroku-appsfavorites)\n* [`heroku apps:favorites:add`](#heroku-appsfavoritesadd)\n* [`heroku apps:favorites:remove`](#heroku-appsfavoritesremove)\n* [`heroku apps:info`](#heroku-appsinfo)\n* [`heroku apps:open [PATH]`](#heroku-appsopen-path)\n* [`heroku apps:rename NEWNAME`](#heroku-appsrename-newname)\n* [`heroku apps:stacks`](#heroku-appsstacks)\n* [`heroku apps:stacks:set STACK`](#heroku-appsstacksset-stack)\n* [`heroku config:set`](#heroku-configset)\n* [`heroku domains`](#heroku-domains)\n* [`heroku domains:add HOSTNAME`](#heroku-domainsadd-hostname)\n* [`heroku domains:clear`](#heroku-domainsclear)\n* [`heroku domains:remove HOSTNAME`](#heroku-domainsremove-hostname)\n* [`heroku domains:wait [HOSTNAME]`](#heroku-domainswait-hostname)\n* [`heroku drains`](#heroku-drains)\n* [`heroku drains:add URL`](#heroku-drainsadd-url)\n* [`heroku drains:remove [URL|TOKEN]`](#heroku-drainsremove-url-token)\n* [`heroku dyno:kill DYNO`](#heroku-dynokill-dyno)\n* [`heroku dyno:resize`](#heroku-dynoresize)\n* [`heroku dyno:restart [DYNO]`](#heroku-dynorestart-dyno)\n* [`heroku dyno:scale`](#heroku-dynoscale)\n* [`heroku dyno:stop DYNO`](#heroku-dynostop-dyno)\n* [`heroku features`](#heroku-features)\n* [`heroku features:disable FEATURE`](#heroku-featuresdisable-feature)\n* [`heroku features:enable FEATURE`](#heroku-featuresenable-feature)\n* [`heroku features:info FEATURE`](#heroku-featuresinfo-feature)\n* [`heroku keys`](#heroku-keys)\n* [`heroku keys:add [KEY]`](#heroku-keysadd-key)\n* [`heroku keys:clear`](#heroku-keysclear)\n* [`heroku keys:remove KEY`](#heroku-keysremove-key)\n* [`heroku labs`](#heroku-labs)\n* [`heroku labs:enable FEATURE`](#heroku-labsenable-feature)\n* [`heroku labs:info FEATURE`](#heroku-labsinfo-feature)\n* [`heroku maintenance`](#heroku-maintenance)\n* [`heroku maintenance:off`](#heroku-maintenanceoff)\n* [`heroku maintenance:on`](#heroku-maintenanceon)\n* [`heroku notifications`](#heroku-notifications)\n* [`heroku ps [TYPE [TYPE ...]]`](#heroku-ps-type-type)\n* [`heroku ps:kill DYNO`](#heroku-pskill-dyno)\n* [`heroku ps:resize`](#heroku-psresize)\n* [`heroku ps:restart [DYNO]`](#heroku-psrestart-dyno)\n* [`heroku ps:scale`](#heroku-psscale)\n* [`heroku ps:stop DYNO`](#heroku-psstop-dyno)\n* [`heroku ps:type`](#heroku-pstype)\n* [`heroku releases`](#heroku-releases)\n* [`heroku releases:info [RELEASE]`](#heroku-releasesinfo-release)\n* [`heroku releases:output [RELEASE]`](#heroku-releasesoutput-release)\n* [`heroku releases:rollback [RELEASE]`](#heroku-releasesrollback-release)\n\n## `heroku apps`\n\nlist your apps\n\n```\nUSAGE\n  $ heroku apps\n\nOPTIONS\n  -A, --all          include apps in all teams\n  -p, --personal     list apps in personal account when a default team is set\n  -s, --space=space  filter by space\n  -t, --team=team    team to use\n  --json             output in json format\n\nEXAMPLES\n  $ heroku apps\n  === My Apps\n  example\n  example2\n\n  === Collaborated Apps\n  theirapp   other@owner.name\n```\n\n## `heroku apps:create [APP]`\n\ncreates a new app\n\n```\nUSAGE\n  $ heroku apps:create [APP]\n\nARGUMENTS\n  APP  name of app to create\n\nOPTIONS\n  -b, --buildpack=buildpack  buildpack url to use for this app\n  -n, --no-remote            do not create a git remote\n  -r, --remote=remote        the git remote to create, default \"heroku\"\n  -s, --stack=stack          the stack to create the app on\n  -t, --team=team            team to use\n  --addons=addons            comma-delimited list of addons to install\n  --json                     output in json format\n  --region=region            specify region for the app to run in\n  --space=space              the private space to create the app in\n  --ssh-git                  use SSH git protocol for local git remote\n\nEXAMPLES\n  $ heroku apps:create\n  Creating app... done, stack is cedar-14\n  https://floating-dragon-42.heroku.com/ | https://git.heroku.com/floating-dragon-42.git\n\n  # or just\n  $ heroku create\n\n  # use a heroku.yml manifest file\n  $ heroku apps:create --manifest\n\n  # specify a buildpack\n  $ heroku apps:create --buildpack https://github.com/some/buildpack.git\n\n  # specify a name\n  $ heroku apps:create example\n\n  # create a staging app\n  $ heroku apps:create example-staging --remote staging\n\n  # create an app in the eu region\n  $ heroku apps:create --region eu\n```\n\n## `heroku apps:destroy`\n\npermanently destroy an app\n\n```\nUSAGE\n  $ heroku apps:destroy\n\nOPTIONS\n  -a, --app=app          app to run command against\n  -c, --confirm=confirm\n  -r, --remote=remote    git remote of app to use\n\nDESCRIPTION\n  This will also destroy all add-ons on the app.\n```\n\n## `heroku apps:errors`\n\nview app errors\n\n```\nUSAGE\n  $ heroku apps:errors\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n  --dyno               show only dyno errors\n  --hours=hours        number of hours to look back (default 24)\n  --json               output in json format\n  --router             show only router errors\n```\n\n## `heroku apps:favorites`\n\nlist favorited apps\n\n```\nUSAGE\n  $ heroku apps:favorites\n\nOPTIONS\n  --json  output in json format\n```\n\n## `heroku apps:favorites:add`\n\nfavorites an app\n\n```\nUSAGE\n  $ heroku apps:favorites:add\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n```\n\n## `heroku apps:favorites:remove`\n\nunfavorites an app\n\n```\nUSAGE\n  $ heroku apps:favorites:remove\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n```\n\n## `heroku apps:info`\n\nshow detailed app information\n\n```\nUSAGE\n  $ heroku apps:info\n\nOPTIONS\n  -a, --app=app        app to run command against\n  -j, --json\n  -r, --remote=remote  git remote of app to use\n  -s, --shell          output more shell friendly key/value pairs\n\nDESCRIPTION\n  $ heroku apps:info\n  === example\n  Git URL:   https://git.heroku.com/example.git\n  Repo Size: 5M\n  ...\n\n  $ heroku apps:info --shell\n  git_url=https://git.heroku.com/example.git\n  repo_size=5000000\n  ...\n```\n\n## `heroku apps:open [PATH]`\n\nopen the app in a web browser\n\n```\nUSAGE\n  $ heroku apps:open [PATH]\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n\nEXAMPLES\n  $ heroku open -a myapp\n  # opens https://myapp.herokuapp.com\n\n  $ heroku open -a myapp /foo\n  # opens https://myapp.herokuapp.com/foo\n```\n\n## `heroku apps:rename NEWNAME`\n\nrename an app\n\n```\nUSAGE\n  $ heroku apps:rename NEWNAME\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n  --ssh-git            use ssh git protocol instead of https\n\nDESCRIPTION\n  This will locally update the git remote if it is set to the old app.\n\nEXAMPLES\n  $ heroku apps:rename --app oldname newname\n  https://newname.herokuapp.com/ | https://git.heroku.com/newname.git\n  Git remote heroku updated\n```\n\n## `heroku apps:stacks`\n\nshow the list of available stacks\n\n```\nUSAGE\n  $ heroku apps:stacks\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n```\n\n## `heroku apps:stacks:set STACK`\n\nset the stack of an app\n\n```\nUSAGE\n  $ heroku apps:stacks:set STACK\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n\nEXAMPLES\n  $ heroku stack:set cedar-14 -a myapp\n  Stack set. Next release on myapp will use cedar-14.\n  Run git push heroku master to create a new release on myapp.\n```\n\n## `heroku config:set`\n\nset one or more config vars\n\n```\nUSAGE\n  $ heroku config:set\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n\nEXAMPLES\n  $ heroku config:set RAILS_ENV=staging\n  Setting config vars and restarting example... done, v10\n  RAILS_ENV: staging\n\n  $ heroku config:set RAILS_ENV=staging RACK_ENV=staging\n  Setting config vars and restarting example... done, v11\n  RAILS_ENV: staging\n  RACK_ENV:  staging\n```\n\n## `heroku domains`\n\nlist domains for an app\n\n```\nUSAGE\n  $ heroku domains\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n  --json               output in json format\n\nEXAMPLES\n  $ heroku domains\n  === example Heroku Domain\n  example.herokuapp.com\n\n  === example Custom Domains\n  Domain Name      DNS Record Type  DNS Target\n  ───────────      ───────────────  ──────────\n  www.example.com  CNAME            www.example.herokudns.com\n```\n\n## `heroku domains:add HOSTNAME`\n\nadd domain to an app\n\n```\nUSAGE\n  $ heroku domains:add HOSTNAME\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -j, --json           output in json format\n  -r, --remote=remote  git remote of app to use\n  --wait\n```\n\n## `heroku domains:clear`\n\nremove all domains from an app\n\n```\nUSAGE\n  $ heroku domains:clear\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n```\n\n## `heroku domains:remove HOSTNAME`\n\nremove domain from an app\n\n```\nUSAGE\n  $ heroku domains:remove HOSTNAME\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n```\n\n## `heroku domains:wait [HOSTNAME]`\n\nwait for domain to be active for an app\n\n```\nUSAGE\n  $ heroku domains:wait [HOSTNAME]\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n```\n\n## `heroku drains`\n\ndisplay the log drains of an app\n\n```\nUSAGE\n  $ heroku drains\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n  --json               output in json format\n```\n\n## `heroku drains:add URL`\n\nadds a log drain to an app\n\n```\nUSAGE\n  $ heroku drains:add URL\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n```\n\n## `heroku drains:remove [URL|TOKEN]`\n\nremoves a log drain from an app\n\n```\nUSAGE\n  $ heroku drains:remove [URL|TOKEN]\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n```\n\n## `heroku dyno:kill DYNO`\n\nstop app dyno\n\n```\nUSAGE\n  $ heroku dyno:kill DYNO\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n\nDESCRIPTION\n  stop app dyno or dyno type\n\nEXAMPLES\n  $ heroku ps:stop run.1828\n  Stopping run.1828 dyno... done\n\n  $ heroku ps:stop run\n  Stopping run dynos... done\n```\n\n## `heroku dyno:resize`\n\nmanage dyno sizes\n\n```\nUSAGE\n  $ heroku dyno:resize\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n\nDESCRIPTION\n  Called with no arguments shows the current dyno size.\n\n  Called with one argument sets the size.\n  Where SIZE is one of free|hobby|standard-1x|standard-2x|performance\n\n  Called with 1..n TYPE=SIZE arguments sets the quantity per type.\n```\n\n## `heroku dyno:restart [DYNO]`\n\nrestart app dynos\n\n```\nUSAGE\n  $ heroku dyno:restart [DYNO]\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n\nDESCRIPTION\n  if DYNO is not specified, restarts all dynos on app\n\nEXAMPLES\n  $ heroku ps:restart web.1\n  Restarting web.1 dyno... done\n\n  $ heroku ps:restart web\n  Restarting web dynos... done\n\n  $ heroku ps:restart\n  Restarting dynos... done\n```\n\n## `heroku dyno:scale`\n\nscale dyno quantity up or down\n\n```\nUSAGE\n  $ heroku dyno:scale\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n\nDESCRIPTION\n  Appending a size (eg. web=2:Standard-2X) allows simultaneous scaling and resizing.\n\n  Omitting any arguments will display the app's current dyno formation, in a\n  format suitable for passing back into ps:scale.\n\nEXAMPLES\n  $ heroku ps:scale web=3:Standard-2X worker+1\n  Scaling dynos... done, now running web at 3:Standard-2X, worker at 1:Standard-1X.\n\n  $ heroku ps:scale\n  web=3:Standard-2X worker=1:Standard-1X\n```\n\n## `heroku dyno:stop DYNO`\n\nstop app dyno\n\n```\nUSAGE\n  $ heroku dyno:stop DYNO\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n\nDESCRIPTION\n  stop app dyno or dyno type\n\nEXAMPLES\n  $ heroku ps:stop run.1828\n  Stopping run.1828 dyno... done\n\n  $ heroku ps:stop run\n  Stopping run dynos... done\n```\n\n## `heroku features`\n\nlist available app features\n\n```\nUSAGE\n  $ heroku features\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n  --json               output in json format\n```\n\n## `heroku features:disable FEATURE`\n\ndisables an app feature\n\n```\nUSAGE\n  $ heroku features:disable FEATURE\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n```\n\n## `heroku features:enable FEATURE`\n\nenables an app feature\n\n```\nUSAGE\n  $ heroku features:enable FEATURE\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n```\n\n## `heroku features:info FEATURE`\n\ndisplay information about a feature\n\n```\nUSAGE\n  $ heroku features:info FEATURE\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n  --json               output in json format\n```\n\n## `heroku keys`\n\ndisplay your SSH keys\n\n```\nUSAGE\n  $ heroku keys\n\nOPTIONS\n  -l, --long  display full SSH keys\n  --json      output in json format\n```\n\n## `heroku keys:add [KEY]`\n\nadd an SSH key for a user\n\n```\nUSAGE\n  $ heroku keys:add [KEY]\n\nOPTIONS\n  -y, --yes  automatically answer yes for all prompts\n\nDESCRIPTION\n  if no KEY is specified, will try to find ~/.ssh/id_rsa.pub\n\nEXAMPLES\n  $ heroku keys:add\n  Could not find an existing public key.\n  Would you like to generate one? [Yn] y\n  Generating new SSH public key.\n  Uploading SSH public key /.ssh/id_rsa.pub... done\n\n  $ heroku keys:add /my/key.pub\n  Uploading SSH public key /my/key.pub... done\n```\n\n## `heroku keys:clear`\n\nremove all SSH keys for current user\n\n```\nUSAGE\n  $ heroku keys:clear\n```\n\n## `heroku keys:remove KEY`\n\nremove an SSH key from the user\n\n```\nUSAGE\n  $ heroku keys:remove KEY\n\nEXAMPLES\n  $ heroku keys:remove email@example.com\n  Removing email@example.com SSH key... done\n```\n\n## `heroku labs`\n\nlist experimental features\n\n```\nUSAGE\n  $ heroku labs\n\nOPTIONS\n  -a, --app=app        app to run command against\n  -r, --remote=remote  git remote of app to use\n  --json               display as json\n```\n\n## `heroku labs:enable FEATURE`\n\nenables an experimental feature\n\n```\nUSAGE\n  $ heroku labs:enable FEATURE\n\nOPTIONS\n  -a, --app=app        app to run command against\n  -r, --remote=remote  git remote of app to use\n```\n\n## `heroku labs:info FEATURE`\n\nshow feature info\n\n```\nUSAGE\n  $ heroku labs:info FEATURE\n\nOPTIONS\n  -a, --app=app        app to run command against\n  -r, --remote=remote  git remote of app to use\n  --json               display as json\n```\n\n## `heroku maintenance`\n\ndisplay the current maintenance status of app\n\n```\nUSAGE\n  $ heroku maintenance\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n```\n\n## `heroku maintenance:off`\n\ntake the app out of maintenance mode\n\n```\nUSAGE\n  $ heroku maintenance:off\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n```\n\n## `heroku maintenance:on`\n\nput the app into maintenance mode\n\n```\nUSAGE\n  $ heroku maintenance:on\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n```\n\n## `heroku notifications`\n\ndisplay notifications\n\n```\nUSAGE\n  $ heroku notifications\n\nOPTIONS\n  -a, --app=app        app to run command against\n  -r, --remote=remote  git remote of app to use\n  --all                view all notifications (not just the ones for the current app)\n  --json               output in json format\n  --read               show notifications already read\n```\n\n## `heroku ps [TYPE [TYPE ...]]`\n\nlist dynos for an app\n\n```\nUSAGE\n  $ heroku ps [TYPE [TYPE ...]]\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n  --json               display as json\n\nEXAMPLES\n  $ heroku ps\n  === run: one-off dyno\n  run.1: up for 5m: bash\n\n  === web: bundle exec thin start -p $PORT\n  web.1: created for 30s\n\n  $ heroku ps run # specifying types\n  === run: one-off dyno\n  run.1: up for 5m: bash\n```\n\n## `heroku ps:kill DYNO`\n\nstop app dyno\n\n```\nUSAGE\n  $ heroku ps:kill DYNO\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n\nDESCRIPTION\n  stop app dyno or dyno type\n\nEXAMPLES\n  $ heroku ps:stop run.1828\n  Stopping run.1828 dyno... done\n\n  $ heroku ps:stop run\n  Stopping run dynos... done\n```\n\n## `heroku ps:resize`\n\nmanage dyno sizes\n\n```\nUSAGE\n  $ heroku ps:resize\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n\nDESCRIPTION\n  Called with no arguments shows the current dyno size.\n\n  Called with one argument sets the size.\n  Where SIZE is one of free|hobby|standard-1x|standard-2x|performance\n\n  Called with 1..n TYPE=SIZE arguments sets the quantity per type.\n```\n\n## `heroku ps:restart [DYNO]`\n\nrestart app dynos\n\n```\nUSAGE\n  $ heroku ps:restart [DYNO]\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n\nDESCRIPTION\n  if DYNO is not specified, restarts all dynos on app\n\nEXAMPLES\n  $ heroku ps:restart web.1\n  Restarting web.1 dyno... done\n\n  $ heroku ps:restart web\n  Restarting web dynos... done\n\n  $ heroku ps:restart\n  Restarting dynos... done\n```\n\n## `heroku ps:scale`\n\nscale dyno quantity up or down\n\n```\nUSAGE\n  $ heroku ps:scale\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n\nDESCRIPTION\n  Appending a size (eg. web=2:Standard-2X) allows simultaneous scaling and resizing.\n\n  Omitting any arguments will display the app's current dyno formation, in a\n  format suitable for passing back into ps:scale.\n\nEXAMPLES\n  $ heroku ps:scale web=3:Standard-2X worker+1\n  Scaling dynos... done, now running web at 3:Standard-2X, worker at 1:Standard-1X.\n\n  $ heroku ps:scale\n  web=3:Standard-2X worker=1:Standard-1X\n```\n\n## `heroku ps:stop DYNO`\n\nstop app dyno\n\n```\nUSAGE\n  $ heroku ps:stop DYNO\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n\nDESCRIPTION\n  stop app dyno or dyno type\n\nEXAMPLES\n  $ heroku ps:stop run.1828\n  Stopping run.1828 dyno... done\n\n  $ heroku ps:stop run\n  Stopping run dynos... done\n```\n\n## `heroku ps:type`\n\nmanage dyno sizes\n\n```\nUSAGE\n  $ heroku ps:type\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n\nDESCRIPTION\n  Called with no arguments shows the current dyno size.\n\n  Called with one argument sets the size.\n  Where SIZE is one of free|hobby|standard-1x|standard-2x|performance\n\n  Called with 1..n TYPE=SIZE arguments sets the quantity per type.\n```\n\n## `heroku releases`\n\ndisplay the releases for an app\n\n```\nUSAGE\n  $ heroku releases\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -n, --num=num        number of releases to show\n  -r, --remote=remote  git remote of app to use\n  --json               output releases in json format\n\nEXAMPLES\n  $ heroku releases\n  === example Releases\n  v1 Config add FOO_BAR email@example.com 2015/11/17 17:37:41 (~ 1h ago)\n  v2 Config add BAR_BAZ email@example.com 2015/11/17 17:37:41 (~ 1h ago)\n  v3 Config add BAZ_QUX email@example.com 2015/11/17 17:37:41 (~ 1h ago)\n```\n\n## `heroku releases:info [RELEASE]`\n\nview detailed information for a release\n\n```\nUSAGE\n  $ heroku releases:info [RELEASE]\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n  -s, --shell          output in shell format\n  --json               output in json format\n```\n\n## `heroku releases:output [RELEASE]`\n\nView the release command output\n\n```\nUSAGE\n  $ heroku releases:output [RELEASE]\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n```\n\n## `heroku releases:rollback [RELEASE]`\n\nrollback to a previous release\n\n```\nUSAGE\n  $ heroku releases:rollback [RELEASE]\n\nOPTIONS\n  -a, --app=app        (required) app to run command against\n  -r, --remote=remote  git remote of app to use\n\nDESCRIPTION\n  If RELEASE is not specified, it will rollback one release\n```\n<!-- commandsstop -->\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/heroku/cli.git"
  },
  "scripts": {
    "postpublish": "rm oclif.manifest.json",
    "prepack": "oclif-dev manifest && oclif-dev readme",
    "test": "mocha",
    "version": "oclif-dev readme && git add README.md"
  },
  "version": "7.18.0"
}
